trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build Maven Project
    steps:
    - task: JavaToolInstaller@0
      inputs:
        versionSpec: '17'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'
      displayName: 'Install Java 17'

    - script: java -version
      displayName: 'Check Java Version'

    - task: Maven@3
      displayName: 'Maven Package'
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'package'
        options: '-DskipTests=true'

    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.?(war|jar)'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - upload: '$(Build.ArtifactStagingDirectory)'
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  jobs: 
  - deployment: VMDeploy
    displayName: web
    environment:
      name: 'metro-java-env'
      resourceName: toktam-azure-environment
      resourceType: virtualMachine
    strategy:
        rolling:
          maxParallel: 2  #for percentages, mention as x%
          preDeploy:
            steps:
            - download: current
              artifact: drop
            - script: echo initialize, cleanup, backup, install certs
          deploy:
            steps:
            - task: Bash@3
              inputs:
                targetType: 'inline'
                script: |
                  # Modify deployment script based on the app type
                  echo "Starting deployment script run"
                  sudo java -jar '$(Pipeline.Workspace)/drop/**/target/*.jar'
          routeTraffic:
            steps:
            - script: echo routing traffic
          postRouteTraffic:
            steps:
            - script: echo health check post-route traffic
          on:
            failure:
              steps:
              - script: echo Restore from backup! This is on failure
            success:
              steps:
              - script: echo Notify! This is on success